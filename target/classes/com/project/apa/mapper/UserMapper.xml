<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.apa.mapper.UserMapper">

	<select id="getUser" parameterType="String" resultType="com.project.apa.api.user.domain.UserDTO">
		SELECT * FROM tblUser WHERE userSeq = #{seq}
	</select>
	
	<update id="editUser" parameterType="com.project.apa.api.user.domain.UserDTO">
		UPDATE tblUser SET 
			userName = #{userName}, 
			userPw = #{userPw}, 
			userTel = #{userTel}, 
			userEmail = #{userEmail}, 
			userAddress = #{userAddress} 
				WHERE userSeq = #{userSeq}
	</update>
	
	<update id="deleteUser" parameterType="String">
		UPDATE tblUser SET isUserUnregister = 'y' WHERE userSeq = #{seq}
	</update>
	
	<select id="getChild" parameterType="String" resultType="com.project.apa.api.user.domain.UserChildDTO">
		SELECT C.childSeq, C.userSeq, C.childName, C.childSSN, U.userRelation FROM tblChild C
		INNER JOIN tblUser U 
			ON C.userSeq = U.userSeq 
				WHERE C.userSeq = #{seq} AND C.isChildUnregister = 'n'
	</select>
	
	<update id="editChild" parameterType="com.project.apa.api.user.domain.UserChildDTO">
		UPDATE tblChild SET childName = #{childName} WHERE childSeq = #{childSeq}
	</update>
	
	<update id="deleteChild" parameterType="String">
		UPDATE tblChild SET isChildUnregister = 'y' WHERE childSeq = #{seq}
	</update>
	
	<insert id="addChild" parameterType="com.project.apa.api.user.domain.UserChildDTO">
		INSERT INTO tblChild (childSeq, userSeq, childName, childSSN) VALUES (seqChild.nextVal, #{userSeq}, #{childName}, #{childSSN})
	</insert>
	
	<update id="addFirstChild" parameterType="com.project.apa.api.user.domain.UserChildDTO">
		UPDATE tblUser SET userRelation = #{userRelation} WHERE userSeq = #{userSeq}
	</update>
	
	<select id="getUserAppointment" parameterType="String" resultType="com.project.apa.api.user.domain.UserAppointmentDTO">
		SELECT
		H.hospitalName,
		D.doctorName,
		CASE
			WHEN A.childSeq IS NOT NULL THEN C.childName
			ELSE U.userName
		END AS patientName,
		CASE
			WHEN A.symptom IS NOT NULL THEN A.symptom
			ELSE '내용 없음' 
		END AS symptom,
		A.treatmentWay,
		TO_CHAR(A.appointmentDate, 'YYYY-MM-DD HH24:MI') AS appointmentDate,
		S.status
		FROM tblAppointment A
			INNER JOIN tblHospital H
				ON A.hospitalId = H.hospitalId
					INNER JOIN tblDoctor D
						ON A.doctorSeq = D.doctorSeq
							INNER JOIN tblAppointmentStatus S
								ON S.appointmentSeq = A.appointmentSeq
									INNER JOIN tblUser U
										ON U.userSeq = A.userSeq
											LEFT OUTER JOIN tblChild C
												ON C.childSeq = A.childSeq
													WHERE A.userSeq = #{seq} AND sysdate &lt; A.appointmentDate AND S.status IN ('승인대기', '진료대기', '진료중', '예약거부')
														ORDER BY A.regdate DESC														
	</select>
	
	<select id="getUserRecord" parameterType="String" resultType="com.project.apa.api.user.domain.UserRecordDTO">
		SELECT DISTINCT
		R.appointmentSeq, H.hospitalName, D.doctorName, R.diagnosis, TO_CHAR(A.appointmentDate, 'YYYY-MM-DD HH24:MI') AS appointmentDate, RV.reviewSeq FROM tblRecord R
		INNER JOIN tblAppointment A
			ON R.appointmentSeq = A.appointmentSeq 
		INNER JOIN tblHospital H
			ON H.hospitalId = A.hospitalId
		INNER JOIN tblDoctor D
			ON D.doctorSeq = A.doctorSeq
		INNER JOIN tblChild C
			ON C.userSeq = A.userSeq
		INNER JOIN tblAppointmentStatus S
			ON S.appointmentSeq = A.appointmentSeq
		INNER JOIN tblUser U
			ON U.userSeq = A.userSeq
		LEFT OUTER JOIN tblReview RV
			ON RV.appointmentSeq = R.appointmentSeq
				WHERE A.userSeq = #{seq} AND sysdate > A.appointmentDate AND S.status IN ('진료완료')
					ORDER BY appointmentDate DESC
	</select>
	
	<select id="getUserDetailRecord" parameterType="String" resultType="com.project.apa.api.user.domain.UserDetailRecordDTO">
		SELECT
		H.hospitalName,
		U.userName,
		CASE
			WHEN A.childSeq IS NOT NULL THEN C.childName
			ELSE U.userName
		END AS patientName,
		R.diagnosis,
		R.diseaseCode,
		TO_CHAR(A.appointmentDate, 'YYYY-MM-DD HH24:MI') AS appointmentDate FROM tblRecord R
			INNER JOIN tblAppointment A
				ON R.appointmentSeq = A.appointmentSeq 
					INNER JOIN tblHospital H
						ON H.hospitalId = A.hospitalId
							INNER JOIN tblDoctor D
								ON D.doctorSeq = A.doctorSeq
									INNER JOIN tblUser U
										ON U.userSeq = A.userSeq
											LEFT OUTER JOIN tblChild C
												ON C.childSeq = A.childSeq
													WHERE R.appointmentSeq = #{seq} AND sysdate > A.appointmentDate
	</select>
	
	<select id="insertReview" parameterType="String" resultType="com.project.apa.api.user.domain.UserReviewDTO">
		SELECT H.hospitalName, DO.doctorName, A.treatmentWay, TO_CHAR(A.appointmentDate, 'YYYY-MM-DD HH24:MI') AS appointmentDate FROM tblRecord R
		INNER JOIN tblAppointment A
			ON A.appointmentSeq = R.appointmentSeq
		INNER JOIN tblHospital H
			ON H.hospitalId = A.hospitalId
		INNER JOIN tblDoctor DO
			ON DO.doctorSeq = A.doctorSeq
				WHERE R.appointmentSeq = #{seq}
	</select>
	
	<insert id="insertReviewOK" parameterType="com.project.apa.api.user.domain.UserReviewDTO">
		INSERT INTO tblReview (reviewSeq, appointmentSeq, reviewContent, isReviewDelete) VALUES (seqReview.nextVal, #{appointmentSeq}, #{reviewContent}, default)
	</insert>
	
	<select id="getLastReviewSeq" resultType="Integer">
		SELECT max(reviewSeq) FROM tblReview
	</select>
	
	<insert id="insertTag" parameterType="com.project.apa.api.user.domain.UserReviewDTO">
		INSERT INTO tblReviewTag (reviewTagSeq, reviewSeq, tagSeq) VALUES (seqReviewTag.nextVal, #{reviewSeq}, #{tagSeq})
	</insert>	
	
	<select id="getUserBookmark" parameterType="String" resultType="com.project.apa.api.user.domain.UserBookmarkDTO">
		SELECT
		B.userSeq,
		B.bookmarkSeq,
		H.hospitalId,
		H.hospitalName,
		TO_CHAR(O.openTime, 'HH24:MI') AS openTime,
		TO_CHAR(O.closeTime, 'HH24:MI') AS closeTime,
		H.hospitalAddress,
		CASE
			WHEN TO_DATE(TO_CHAR(O.openTime, 'HH24:MI'), 'HH24:MI') > TO_DATE(TO_CHAR(SYSDATE, 'HH24:MI'), 'HH24:MI') THEN '진료 전'  
			WHEN TO_DATE(TO_CHAR(O.openTime, 'HH24:MI'), 'HH24:MI') &lt;= TO_DATE(TO_CHAR(SYSDATE, 'HH24:MI'), 'HH24:MI') AND TO_DATE(TO_CHAR(O.closeTime, 'HH24:MI'), 'HH24:MI') > TO_DATE(TO_CHAR(SYSDATE, 'HH24:MI'), 'HH24:MI') THEN '진료 중'  
			WHEN TO_DATE(TO_CHAR(O.closeTime, 'HH24:MI'), 'HH24:MI') &lt;= TO_DATE(TO_CHAR(SYSDATE, 'HH24:MI'), 'HH24:MI') THEN '진료 종료'
		END AS openCheck
		FROM tblBookmark B
			INNER JOIN tblHospital H
				ON H.hospitalId = B.hospitalId
					INNER JOIN tblHospitalOperation O
						ON O.hospitalId = H.hospitalId
							WHERE B.userSeq = #{seq}
								ORDER BY H.hospitalAddress DESC	
	</select>
	
	<delete id="deleteBookmark" parameterType="String">
		DELETE FROM tblBookmark WHERE bookmarkSeq = #{seq}
	</delete>
	
</mapper>